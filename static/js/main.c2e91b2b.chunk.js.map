{"version":3,"sources":["CountrySelector.js","Info.js","Countries.js","Summary.js","App.js","index.js"],"names":["CountrySelector","handleCountryChange","useState","countryPick","setCountryPick","useEffect","a","cntr","showCountries","console","log","FormControl","className","NativeSelect","defaultValue","onChange","event","target","value","map","country","index","axios","get","countries","data","name","Info","props","currentTime","Date","toLocaleTimeString","setCurrT","setInterval","Fragment","icon","faVirus","latestdate","toDateString","start","end","worldwide","NewConfirmed","duration","separator","NewRecovered","NewDeaths","TotalConfirmed","TotalRecovered","TotalDeaths","Countries","this","data-aos","Country","Component","Summary","state","latestDate","global","loading","res","setState","Global","App","Aos","init","ReactDOM","render","document","getElementById"],"mappings":"yTAqCeA,EAhCS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACbC,mBAAS,IADI,mBAC5CC,EAD4C,KAC/BC,EAD+B,KAanD,OAVAC,qBAAU,YACW,uCAAG,sBAAAC,EAAA,kEACpBF,EADoB,SACCG,IADD,6EAAH,qDAInBC,KACC,CAACJ,IAEJK,QAAQC,IAAIP,GAGV,cAACQ,EAAA,EAAD,CAAaC,UAAU,iBAAvB,SACE,eAACC,EAAA,EAAD,CACEC,aAAa,GACbC,SAAU,SAACC,GACTf,EAAoBe,EAAMC,OAAOC,QAHrC,UAME,wBAAQA,MAAM,aAAd,4BACCf,EAAYgB,KAAI,SAACC,EAASC,GAAV,OACf,wBAAoBH,MAAOE,EAA3B,SACGA,GADUC,Y,gBCbVd,EAAI,uCAAG,8BAAAD,EAAA,+EAINgB,IAAMC,IAAN,UANF,iCAME,eAJM,uBAGNC,EAHM,EAGdC,KAAQD,UAHM,kBAKTA,EAAUL,KAAI,SAACC,GAAD,OAAaA,EAAQM,SAL1B,yFAAH,qDAkHFC,MAzGf,SAAcC,GACZ,IAAIC,GAAc,IAAIC,MAAOC,qBADV,EAGO7B,mBAAS2B,GAHhB,mBAGLG,GAHK,WAUnBC,aALmB,WACjBJ,GAAc,IAAIC,MAAOC,qBACzBC,EAASH,KAGa,KAExB,IAAM5B,EAAmB,uCAAG,WAAOmB,GAAP,SAAAd,EAAA,0FAAH,sDAEzB,OACE,eAAC,IAAM4B,SAAP,WACE,sBAAKtB,UAAU,YAAf,UACE,qBAAIA,UAAU,eAAd,cAEE,cAAC,IAAD,CAAiBA,UAAU,mBAAmBuB,KAAMC,MAFtD,oBAKA,qBAAIxB,UAAU,eAAd,UAA8BiB,EAA9B,OACA,oBAAIjB,UAAU,eAAd,SACG,IAAIkB,KAAKF,EAAMS,YAAYC,iBAE9B,sBAAK1B,UAAU,WAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,+CACA,6BACE,cAAC,IAAD,CACE2B,MAAO,EACPC,IAAKZ,EAAMa,UAAUC,aACrBC,SAAU,IACVC,UAAU,WAIhB,sBAAKhC,UAAU,yBAAf,UACE,+CACA,6BACE,cAAC,IAAD,CACE2B,MAAO,EACPC,IAAKZ,EAAMa,UAAUI,aACrBF,SAAU,IACVC,UAAU,WAKhB,sBAAKhC,UAAU,sBAAf,UACE,4CACA,6BACE,cAAC,IAAD,CACE2B,MAAO,EACPC,IAAKZ,EAAMa,UAAUK,UACrBH,SAAU,IACVC,UAAU,cAKlB,sBAAKhC,UAAU,MAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,iDACA,6BACE,cAAC,IAAD,CACE2B,MAAO,EACPC,IAAKZ,EAAMa,UAAUM,eACrBJ,SAAU,IACVC,UAAU,WAIhB,sBAAKhC,UAAU,2BAAf,UACE,iDACA,6BACE,cAAC,IAAD,CACE2B,MAAO,EACPC,IAAKZ,EAAMa,UAAUO,eACrBL,SAAU,IACVC,UAAU,WAKhB,sBAAKhC,UAAU,wBAAf,UACE,8CACA,6BACE,cAAC,IAAD,CACE2B,MAAO,EACPC,IAAKZ,EAAMa,UAAUQ,YACrBN,SAAU,IACVC,UAAU,iBAOpB,cAAC,EAAD,CAAiB3C,oBAAqBA,QClF7BiD,E,uKAvCH,IACA1B,EAAc2B,KAAKvB,MAAnBJ,UAER,OACE,cAAC,IAAMU,SAAP,UACE,qBAAKtB,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,+BACE,oBAAIA,UAAU,iBAAiBwC,WAAS,aAAxC,SACG5B,EAAU6B,UAEb,oBAAIzC,UAAU,wBAAwBwC,WAAS,aAA/C,SACG5B,EAAUkB,eAEb,oBAAI9B,UAAU,mBAAmBwC,WAAS,aAA1C,SACG5B,EAAUsB,YAEb,oBAAIlC,UAAU,sBAAsBwC,WAAS,aAA7C,SACG5B,EAAUqB,eAEb,oBAAIjC,UAAU,yBAAyBwC,WAAS,aAAhD,SACG5B,EAAUuB,iBAEb,oBAAInC,UAAU,sBAAsBwC,WAAS,aAA7C,SACG5B,EAAUyB,cAEb,oBAAIrC,UAAU,yBAAyBwC,WAAS,aAAhD,SACG5B,EAAUwB,gC,GA7BLM,aC2ETC,E,4MAtEbC,MAAQ,CACNhC,UAAW,GACXiC,WAAY,KACZC,OAAQ,GACRC,SAAS,EACTvC,QAAS,I,EAgBXnB,oB,uCAAsB,WAAOmB,GAAP,SAAAd,EAAA,0F,wPAZFgB,IAAMC,IAAI,sC,OAAtBqC,E,OAINnD,QAAQC,IAAIkD,GAEZT,KAAKU,SAAS,CAAErC,UAAWoC,EAAInC,KAAKyB,YACpCC,KAAKU,SAAS,CAAEJ,WAAYG,EAAInC,KAAKK,OACrCqB,KAAKU,SAAS,CAAEH,OAAQE,EAAInC,KAAKqC,SACjCX,KAAKU,SAAS,CAAEF,SAAS,I,qIAMzB,OAAIR,KAAKK,MAAMG,QACN,oBAAI/C,UAAU,UAAd,wBAGP,eAAC,IAAMsB,SAAP,WACE,cAAC,EAAD,CACEO,UAAWU,KAAKK,MAAME,OACtBrB,WAAYc,KAAKK,MAAMC,aAGzB,qBAAK7C,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,gCACE,qBAAKA,UAAU,qBAAf,SACE,gCACE,+BACE,oBAAIA,UAAU,WAAd,qBACA,oBAAIA,UAAU,WAAd,2BACA,oBAAIA,UAAU,WAAd,wBACA,oBAAIA,UAAU,WAAd,2BACA,oBAAIA,UAAU,WAAd,6BACA,oBAAIA,UAAU,WAAd,0BACA,oBAAIA,UAAU,WAAd,0CAQZ,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,gCACE,gCACGuC,KAAKK,MAAMhC,UAAUL,KAAI,SAACE,GAAD,OACxB,cAAC,EAAD,CAAiCG,UAAWH,GAA5BA,EAAM6B,6B,GA5DlBI,a,mCCgBPS,MAZf,WAKE,OAJA1D,qBAAU,WACR2D,IAAIC,KAAK,CAAEtB,SAAU,QACpB,IAGD,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,OCbNsD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c2e91b2b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport { cntr } from \"./Info\";\r\n\r\nconst CountrySelector = ({ handleCountryChange }) => {\r\n  const [countryPick, setCountryPick] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const showCountries = async () => {\r\n      setCountryPick(await cntr());\r\n    };\r\n\r\n    showCountries();\r\n  }, [setCountryPick]);\r\n\r\n  console.log(countryPick);\r\n\r\n  return (\r\n    <FormControl className=\"select-country\">\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(event) => {\r\n          handleCountryChange(event.target.value);\r\n        }}\r\n      >\r\n        <option value=\"allCountry\">Select Country</option>\r\n        {countryPick.map((country, index) => (\r\n          <option key={index} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountrySelector;\r\n","import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n// import { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport CountrySelector from \"./CountrySelector\";\r\nimport axios from \"axios\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faVirus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// const url = 'https://api.covid19api.com/summary'\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const cntr = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {}\r\n};\r\n\r\nfunction Info(props) {\r\n  let currentTime = new Date().toLocaleTimeString();\r\n\r\n  const [currT, setCurrT] = useState(currentTime);\r\n\r\n  const changeTime = () => {\r\n    currentTime = new Date().toLocaleTimeString();\r\n    setCurrT(currentTime);\r\n  };\r\n\r\n  setInterval(changeTime, 1000);\r\n\r\n  const handleCountryChange = async (country) => {};\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <h2 className=\"main-caption\">\r\n          C\r\n          <FontAwesomeIcon className=\"pl-2 corona-icon\" icon={faVirus} />\r\n          vid-19 Tracker\r\n        </h2>\r\n        <h3 className=\"current-time\">{currentTime} </h3>\r\n        <h4 className=\"current-date\">\r\n          {new Date(props.latestdate).toDateString()}\r\n        </h4>\r\n        <div className=\"row py-4\">\r\n          <div className=\"col-md-4 new-confirmed\">\r\n            <h2>New Confirmed</h2>\r\n            <h3>\r\n              <CountUp\r\n                start={0}\r\n                end={props.worldwide.NewConfirmed}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-4 new-recovered\">\r\n            <h2>New Recovered</h2>\r\n            <h3>\r\n              <CountUp\r\n                start={0}\r\n                end={props.worldwide.NewRecovered}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"col-md-4 new-deaths\">\r\n            <h2>New Deaths</h2>\r\n            <h3>\r\n              <CountUp\r\n                start={0}\r\n                end={props.worldwide.NewDeaths}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 total-confirmed\">\r\n            <h2>Total Confirmed</h2>\r\n            <h3>\r\n              <CountUp\r\n                start={0}\r\n                end={props.worldwide.TotalConfirmed}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-4 total-recovered\">\r\n            <h2>Total Recovered</h2>\r\n            <h3>\r\n              <CountUp\r\n                start={0}\r\n                end={props.worldwide.TotalRecovered}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"col-md-4 total-deaths\">\r\n            <h2>Total Deaths</h2>\r\n            <h3>\r\n              <CountUp\r\n                start={0}\r\n                end={props.worldwide.TotalDeaths}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <CountrySelector handleCountryChange={handleCountryChange} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Countries extends Component {\r\n  render() {\r\n    const { countries } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 p-1 ml-1\">\r\n              <tr>\r\n                <td className=\"col-md-2 cntry\" data-aos=\"zoom-in-up\">\r\n                  {countries.Country}\r\n                </td>\r\n                <td className=\"col-md-2 newconfirmed\" data-aos=\"zoom-in-up\">\r\n                  {countries.NewConfirmed}\r\n                </td>\r\n                <td className=\"col-md-2 ndeaths\" data-aos=\"zoom-in-up\">\r\n                  {countries.NewDeaths}\r\n                </td>\r\n                <td className=\"col-md-2 nrecovered\" data-aos=\"zoom-in-up\">\r\n                  {countries.NewRecovered}\r\n                </td>\r\n                <td className=\"col-md-2 newtconfirmed\" data-aos=\"zoom-in-up\">\r\n                  {countries.TotalConfirmed}\r\n                </td>\r\n                <td className=\"col-md-2 newtdeaths\" data-aos=\"zoom-in-up\">\r\n                  {countries.TotalDeaths}\r\n                </td>\r\n                <td className=\"col-md-2 newtrecovered\" data-aos=\"zoom-in-up\">\r\n                  {countries.TotalRecovered}\r\n                </td>\r\n              </tr>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countries;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Info from \"./Info\";\r\nimport Countries from \"./Countries\";\r\n\r\nclass Summary extends Component {\r\n  state = {\r\n    countries: [],\r\n    latestDate: null,\r\n    global: [],\r\n    loading: true,\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://api.covid19api.com/summary\");\r\n    // const res = await axios.get(\"https://api.covid19api.com/live/country/Portugal/status/confirmed\");\r\n    // const res = await axios.get(\"https://covid19.mathdro.id/api\");\r\n\r\n    console.log(res);\r\n\r\n    this.setState({ countries: res.data.Countries });\r\n    this.setState({ latestDate: res.data.Date });\r\n    this.setState({ global: res.data.Global });\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {};\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <h6 className=\"loading\">Loading...</h6>;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Info\r\n          worldwide={this.state.global}\r\n          latestdate={this.state.latestDate}\r\n        />\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <table>\r\n              <div className=\"col-md-12 p-1 ml-1\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"col-md-2\">Country</th>\r\n                    <th className=\"col-md-2\">New Confirmed</th>\r\n                    <th className=\"col-md-2\">New Deaths</th>\r\n                    <th className=\"col-md-2\">New Recovered</th>\r\n                    <th className=\"col-md-2\">Total Confirmed</th>\r\n                    <th className=\"col-md-2\">Total Deaths</th>\r\n                    <th className=\"col-md-2\">Total Recovered</th>\r\n                  </tr>\r\n                </thead>\r\n              </div>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <table>\r\n              <tbody>\r\n                {this.state.countries.map((index) => (\r\n                  <Countries key={index.Countries} countries={index} />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Summary;\r\n","import { useEffect } from \"react\";\nimport \"./App.css\";\nimport Summary from \"./Summary\";\n\nimport Aos from \"aos\";\nimport \"aos/dist/aos.css\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\n\nfunction App() {\n  useEffect(() => {\n    Aos.init({ duration: 2000 });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Summary />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}